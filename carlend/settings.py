"""
Django settings for carlend project.

Generated by 'django-admin startproject' using Django 5.1.4.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""
from environ import Env
from pathlib import Path
import os
import dj_database_url



env = Env()
BASE_DIR = Path(__file__).resolve().parent.parent
# reading .env file
Env.read_env(os.path.join(BASE_DIR, ".env"))
ENVIRONMENT =env('ENVIRONMENT', default='production')






# Build paths inside the project like this: BASE_DIR / 'subdir'.



#MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.getenv("DJANGO_SECRET_KEY", "default-unsafe-secret-key")
#DATABASE_URL = "postgresql://postgres:HbsatcAhaSUtHTNBgMdWMaZVoTmBzhpO@junction.proxy.rlwy.net:57638/railway"

# SECURITY WARNING: don't run with debug turned on in production!
#DEBUG = True
#DEBUG = os.getenv("DEBUG", "True") == "True"

DEBUG = False


# Allowed hosts
#ALLOWED_HOSTS = []
#ALLOWED_HOSTS = os.getenv("ALLOWED_HOSTS", "127.0.0.1,localhost").split(",")
ALLOWED_HOSTS = ['127.0.0.1', 'localhost',os.getenv("RAILWAY_URL", "web-production-f848.up.railway.app")  # URL de Railway
]]

CSRF_TRUSTED_ORIGINS = [
    'https://carlend-production.up.railway.app',
    'http://127.0.0.1:8000',
]
CONN_MAX_AGE = 60  # Gardez les connexions ouvertes plus longtemps pour réduire les coûts.
# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "django_extensions",
    'whitenoise.runserver_nostatic',
    # Applications personnalisées
    'vehicles',
    'reservations',
    'historiques',
    'home',
    'parc',
    'users',
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    'whitenoise.middleware.WhiteNoiseMiddleware',
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
    
]
STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'
ROOT_URLCONF = "carlend.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        'DIRS': [BASE_DIR / "templates"],  # Répertoire global pour les templates
        "APP_DIRS": True,  # Activer le chargement dans les répertoires des apps
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
                #'django.template.context_processors.static',
            ],
        },
    },
]

WSGI_APPLICATION = "carlend.wsgi.application"


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

# Set default values for the environment variables if they’re not already set
'''os.environ.setdefault("PGDATABASE", "railway")
os.environ.setdefault("PGUSER", "postgres")
os.environ.setdefault("PGPASSWORD", "crHkhupWbWzyNZvEtsAfejhkPbHwxOhY")
os.environ.setdefault("PGHOST", "roundhouse.proxy.rlwy.net")
os.environ.setdefault("PGPORT", "22478")
'''
# Configuration pour Cloudinary
# INSTALLED_APPS += ['cloudinary', 'cloudinary_storage']

# DEFAULT_FILE_STORAGE = 'cloudinary_storage.storage.MediaCloudinaryStorage'

# CLOUDINARY = {
#     'cloud_name': env('CLOUD_NAME'),
#     'api_key': env('API_KEY'),
#     'api_secret': env('API_SECRET'),
# }
# CLOUDINARY_ALLOWED_FORMATS = ['pdf', 'doc', 'docx', 'jpg', 'png']

# MEDIA_URL = 'https://res.cloudinary.com/{}/'.format(env('CLOUD_NAME'))


DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}
POSTGRES_LOCALLY = True
if ENVIRONMENT == 'production' or POSTGRES_LOCALLY is True:
    DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}
# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_USER_MODEL = 'users.User'

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True

SESSION_COOKIE_AGE = 3600  # 1 heure avant expiration
SESSION_SAVE_EVERY_REQUEST = True  # Rafraîchir la session à chaque requête


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

#STATIC_URL = "static/"
#STATICFILES_DIRS = [BASE_DIR / "static"]
LOGGING = {
    "version": 1,
    "disable_existing_loggers": False,
    "handlers": {
        "console": {
            "class": "logging.StreamHandler",
        },
    },
    "root": {
        "handlers": ["console"],
        "level": "DEBUG",
    },
}
STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')
STATICFILES_DIRS = [os.path.join(BASE_DIR, 'static')]  # Assurez-vous que ce répertoire existe

import mimetypes
mimetypes.add_type("font/woff", ".woff", True)
mimetypes.add_type("font/woff2", ".woff2", True)


# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

#DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"
LOGIN_REDIRECT_URL = '/home/'
LOGOUT_REDIRECT_URL = '/accounts/login/'
